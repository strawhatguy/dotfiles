;; The deps.edn file describes the information needed to build a classpath.
;;
;; When using the `clojure` or `clj` script, there are several deps.edn files
;; that are combined:
;; - install-level
;; - user level (this file)
;; - project level (current directory when invoked)
;;
;; For all attributes other than :paths, these config files are merged left to right.
;; Only the last :paths is kept and others are dropped.

;; The deps.edn file describes the information needed to build a classpath.
;;
;; When using the `clojure` or `clj` script, there are several deps.edn files
;; that are combined:
;; - install-level
;; - user level (this file)
;; - project level (current directory when invoked)
;;
;; For all attributes other than :paths, these config files are merged left to right.
;; Only the last :paths is kept and others are dropped.

{
 :aliases
 {
  ;; outdated deps
  :outdated {:extra-deps {com.github.liquidz/antq {:mvn/version "RELEASE"}}
             :main-opts ["-m" "antq.core"]}

  ;; build an uberjar (application) with AOT compilation by default:
  :uberjar {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.0.216"}}
            :exec-fn hf.depstar/uberjar
            :exec-args {:aot true}}
  ;; build a jar (library):
  :jar {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.0.216"}}
        :exec-fn hf.depstar/jar
        :exec-args {}}
  ;; generic depstar alias, use with jar or uberjar function name:
  :depstar {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.0.216"}}
            :ns-default hf.depstar
            :exec-args {}}

  :new {:extra-deps {seancorfield/clj-new {:mvn/version "1.1.309"}}
        :main-opts ["-m" "clj-new.create"]}

  ;; load the "dev" folder of a project, and add the ability to load new deps in a repl
  ;; example:
  ;; (require '[clojure.tools.deps.alpha.repl :refer [add-libs]])
  ;; (add-libs '{jedi-time/jedi-time {:mvn/version "0.2.1"}})
  :dev {:extra-paths ["dev"]
        :extra-deps {org.clojure/tools.deps.alpha ; add-lib3 branch
                     {:git/url "https://github.com/clojure/tools.deps.alpha"
                      :sha "241cd24c35ba770aea4773ea161d45276e5d3a73"}}
        :main-opts ["-e" "(->>(Thread/currentThread)(.getContextClassLoader)(clojure.lang.DynamicClassLoader.)(.setContextClassLoader,(Thread/currentThread)))"]}}}
